<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!-- 日志最大的历史 30天 -->
    <property name="maxHistory" value="15"/>
    <property name="SYS_LOG_DIR" value="./Logs" />

    <!-- ConsoleAppender 控制台输出日志 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 对日志进行格式化 -->
        <encoder>
            <pattern>%d{yyyy-MM-dd-HH:mm:ss.SSS} [%thread] %level  %class:%line>>%msg%n</pattern>
        </encoder>
    </appender>

    <!-- 这个appender是每天生成一个日志文件，并且只保留30天 -->
    <!-- 滚动输出到文件，达到一定条件时，会将日志记录到其他文件 -->
    <appender name="timeFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 滚动策略。具体策略由class指定。 -->
        <!-- TimeBasedRollingPolicy是最常用的滚动策略，根据时间滚动，当达到一定时间时，自动重新开辟一个日志文件 -->
        <!-- FixedWindowRollingPolicy根据固定窗口算法重命名文件的滚动策略 -->
        <!-- triggeringPolicy根据当前活动文件大小来决定是否滚动的策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 由于表达式中最小单位为天，所以每天生成一个日志文件，且以此命名 -->
            <fileNamePattern>${SYS_LOG_DIR}/%d{yyyyMMdd}.log</fileNamePattern>
            <!-- 保留归档文件的最大数量。 -->
            <!-- 本例中由于使用了时间作为滚动策略，且fileNamePattern中最小单位为天，所以归档文件保存30天，超过30天将被删除 -->
            <maxHistory>15</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd-HH:mm:ss.SSS} [%thread] %level  %class:%line>>%msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>


    <!-- root级别   DEBUG -->
    <root level="INFO">
        <!-- 控制台输出 -->
        <appender-ref ref="CONSOLE" />
        <!-- 文件输出 -->
        <appender-ref ref="timeFile" />
    </root>


</configuration>

